{"version":3,"sources":["component/toDO app/todo.js","App.js","index.js"],"names":["Todo","_useState","useState","_useState2","Object","slicedToArray","inputdata","setInputData","_useState3","list","localStorage","getItem","JSON","parse","getLocalData","_useState4","items","setItems","useEffect","setItem","stringify","react_default","a","createElement","Fragment","className","src","alt","type","placeholder","value","onChange","event","target","class","onClick","myNewInputData","id","Date","getTime","toString","name","status","concat","toConsumableArray","alert","map","curElm","index","key","aria-hidden","style","backgroundColor","color","newTask","task","objectSpread","taskcompleted","updatedItems","filter","deleteItem","data-sm-link-text","App","todo","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5e07905e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./style.css\";\r\n//get local storage data back\r\nconst getLocalData=()=>{\r\n    const list = localStorage.getItem(\"mytodolist\");\r\n    if(list){\r\n        return JSON.parse(list);\r\n\r\n    }\r\n    else{\r\n        return[];\r\n\r\n    }\r\n};\r\n\r\n//fa fa-plus add-btn\r\nconst Todo = () => {\r\n    const [inputdata, setInputData]= useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    \r\n    \r\n    //add the item function\r\n    const addItem=()=>{\r\n        if(!inputdata){\r\n            alert(\"plz fill the empty data\");\r\n\r\n        }\r\n        else{\r\n            //triple dot is spread operator mean isse pehle jo bhi data tha usko rakho aur naye wale data ko bhi add karo\r\n            const myNewInputData = {\r\n                id:new Date().getTime().toString(),\r\n                name: inputdata,\r\n                status: false,\r\n\r\n\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n\r\n        }\r\n    };\r\n    //delete item function\r\n    const deleteItem=(index)=>{\r\n        const updatedItems = items.filter((curElm)=>{\r\n            return curElm.id !== index;\r\n\r\n\r\n        });\r\n        setItems(updatedItems);\r\n\r\n\r\n    };\r\n    //completed tasks\r\n    const taskcompleted=(index)=>{\r\n        let newTask = items.map(task => {\r\n            if (task.id === index){\r\n                return({...task, status: !task.status})\r\n            }\r\n            return task;\r\n\r\n        })\r\n        setItems(newTask);\r\n\r\n\r\n\r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n    };\r\n    //remove all the elements\r\n    const removeAll=()=>{\r\n        setItems([]);\r\n\r\n    };\r\n    const completedTask=()=>{\r\n        const updatedItems = items.filter((curElm)=>{\r\n            return curElm.status !== false ;\r\n\r\n\r\n        });\r\n        setItems(updatedItems);\r\n        \r\n        \r\n\r\n        \r\n\r\n        \r\n    };\r\n    const PendingTasks=()=>{\r\n        const updatedItems = items.filter((curElm)=>{\r\n            return curElm.status === false ;\r\n\r\n\r\n        });\r\n        setItems(updatedItems);\r\n        \r\n        \r\n\r\n        \r\n\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n    //adding local storage\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"mytodolist\",JSON.stringify(items));\r\n        \r\n\r\n\r\n    },[items]);\r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src=\"./images/todoimg.png\" alt=\"todologo\" />\r\n                    <figcaption>Add Your Objectives Here</figcaption>\r\n                </figure>\r\n                <div className=\"addItems\">\r\n                    <input type=\"text\" placeholder=\"Add Objective\" className=\"form-control\"\r\n                    value={inputdata}\r\n                    onChange={(event)=>setInputData(event.target.value)}\r\n\r\n                    />\r\n                    <i class=\"fa fa-light fa-plus\" onClick={addItem}></i>   \r\n                </div>\r\n                {/*show our item */}\r\n                <div className=\"showItems\">\r\n                    {\r\n                        items.map((curElm,index)=>{\r\n                            return (\r\n                                <div className=\"eachItem\">\r\n                        <h3>{curElm.name}</h3>\r\n                        <div className=\"todo-btn\" key={curElm.id}>\r\n                        {/*<i class='far fa-edit add-btn'></i>*/ }\r\n                        <i class=\"fa fa-check-square\" aria-hidden=\"true\"\r\n                        style={{\r\n                            backgroundColor: curElm.status===true ? 'red' : '',\r\n                            color: curElm.status===true ? 'white' : '',\r\n                          }}\r\n                          onClick={(event)=>taskcompleted(curElm.id)}></i>\r\n                        <i class='fas fa-trash-alt add-btn' onClick={()=>deleteItem(curElm.id)}></i>\r\n                        \r\n                        </div>\r\n\r\n                    </div>\r\n                                \r\n                            );\r\n                        })\r\n                    }\r\n                    \r\n\r\n                </div>\r\n                {/*remove all button */}\r\n                <div className=\"showItems\">\r\n                    <button onClick={removeAll} className='btn effect01' data-sm-link-text=\"REMOVE ALL\"><span>Remove All</span></button>\r\n                </div>\r\n                <div className=\"showItems\">\r\n                    <button onClick={completedTask} className='btn effect01'><span>Completed Tasks</span></button>\r\n                </div>\r\n                <div className=\"showItems\">\r\n                    <button onClick={PendingTasks} className='btn effect01'><span>Pending Tasks</span></button>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\n\nimport Todo from \"./component/toDO app/todo\";\n\nconst App = () => {\n  return (\n    <>\n    <Todo/>\n    </>\n    \n  )\n};\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n"],"sourceRoot":""}